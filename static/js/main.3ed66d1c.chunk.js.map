{"version":3,"sources":["book.svg","empire-state.svg","home.js","bestsellersearch.js","articles.js","movies.js","readinglist.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","className","id","src","book","alt","React","Component","BestSellerSearch","state","genres","genresLoading","queryDate","queryGenre","results","resultsLoading","errorMessage","booksOnList","searchForm","onSubmit","searchQuery","htmlFor","type","name","placeholder","value","onChange","queryDateEntryChange","required","queryGenreEntryChange","map","result","key","list_name","list_name_encoded","e","setState","target","preventDefault","fetch","process","then","res","status","Error","json","data","catch","error","message","searchResults","published_date","books","index","title","book_image","author","description","href","amazon_product_url","rel","onClick","addBookToList","newBooksOnList","this","Articles","queryValue","numberOfResults","articlesOnList","queryValueEntryChange","response","meta","hits","docs","document","headline","main","byline","original","abstract","web_url","addArticleToList","newArticlesOnList","entry","Movies","moviesOnList","num_results","movie","display_title","summary_short","link","url","addMovieToList","newMoviesOnList","ReadingList","App","empire","to","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.3ed66d1c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/book.ffdb5b1a.svg\";","module.exports = __webpack_public_path__ + \"static/media/empire-state.3aecda0c.svg\";","import React from 'react';\nimport book from './book.svg';\n\nexport default class Home extends React.Component {\n\n    render(){\n        return(\n            <div>\n                <h1 className='page-heading'>Home</h1>\n                <h2>Compile your list of future reads and movies!</h2>\n                <p>Pick one of the search options above to search the NYT directory.</p>\n                <p>Add and and remove items to build your list.</p>\n                <img id='book-logo' src={book} alt='book'/>\n                <p>Happy searching!</p>\n            </div>\n        )\n    }\n}","import React from 'react';\n\nexport default class BestSellerSearch extends React.Component {\n    state = {\n        genres: [],\n        genresLoading: true,\n        queryDate: '',\n        queryGenre: '',\n        results: [],\n        resultsLoading: true,\n        errorMessage: '',\n        booksOnList: []\n    };\n\n    componentDidMount() {\n        fetch(`https://api.nytimes.com/svc/books/v3//lists/names.json?api-key=${process.env.REACT_APP_NYT_API_KEY}`)\n        .then(res => res.json())\n        .then(data => this.setState({\n          genres: data,\n          genresLoading: false\n        }));\n    }\n\n    searchForm = () => {\n        return this.state.genresLoading\n        ? <div className='searchFormLoading'>Loading genres...</div>\n        : <div>\n            <h2>Add a date and select a genre in the form below:</h2>\n            <form onSubmit={this.searchQuery}>\n                <label htmlFor=\"date\">Date: </label>\n                <input \n                    type=\"text\"\n                    id=\"date\"\n                    name=\"date\"\n                    placeholder=\"2020-02-20\"\n                    value={this.state.queryDate}\n                    onChange={this.queryDateEntryChange}\n                    required\n                />\n                <br/>\n                <label htmlFor=\"genre\">Genre: </label>\n                <select id=\"genre\" name=\"genre\" onChange={this.queryGenreEntryChange}>\n                    <option value=''>Select one</option>\n                    {this.state.genres.results.map(result =>\n                        <option key={result.list_name} value={result.list_name_encoded}>{result.list_name}</option>\n                    )}\n                </select>\n                <br/>\n                <input type=\"submit\" value=\"Submit\" />\n            </form>\n        </div>\n    }\n\n    queryDateEntryChange = (e) => {\n        this.setState({ queryDate: e.target.value });\n    }\n\n    queryGenreEntryChange = (e) => {\n        this.setState({ queryGenre: e.target.value });\n    }\n\n    searchQuery = (e) => {\n        e.preventDefault();\n        fetch(`https://api.nytimes.com/svc/books/v3/lists/${this.state.queryDate}/${this.state.queryGenre}.json?api-key=${process.env.REACT_APP_NYT_API_KEY}`)\n        .then(res => {\n            if (res.status === 404) {\n                throw new Error('No list found for list name and/or date provided.');\n            } else {\n                return res.json();\n            }\n        })\n        .then(data => this.setState({\n          results: data,\n          errorMessage: '',\n          resultsLoading: false\n        }))\n        .catch(error => {\n            const errorMessage = error.message;\n            this.setState({ resultsLoading: true, errorMessage });\n        });\n    }\n\n    searchResults = () => {\n        return this.state.resultsLoading\n        ? <div className='searchResultsLoading'>Please complete the search above to display a list of results.</div>\n        : <div>\n            <h2 className='page-sub-heading'>Results:</h2>\n            <div className='query-info'>Closest possible query for {this.state.results.results.list_name} is for {this.state.results.results.published_date}.</div>\n            <div className='search-results'>\n                {this.state.results.results.books.map((book, index) => \n                    <div key={book.title} id={`${this.state.queryGenre}${index}`} className='book-container'>\n                        <img className='book-image' src={book.book_image} alt='book cover'/>\n                        <h3 className='book-title-author'>{book.title} by {book.author}</h3>\n                        <p className='book-description'>{book.description}</p>\n                        <a className='book-amazon-link' href={book.amazon_product_url} target=\"_blank\" rel=\"noopener noreferrer\">Buy the book on Amazon</a>\n                        <br/>\n                        <button className='book-add-button' id={`addBtn${this.state.queryGenre}${index}`} onClick={this.addBookToList(index)}>Add to List</button>\n                    </div>\n                )}\n            </div>\n        </div>\n    }\n\n    addBookToList = (index) => {\n        return (e) => {\n            const newBooksOnList = [...this.state.booksOnList, this.state.results.results.books[index]]\n            this.setState({\n                booksOnList: newBooksOnList\n            })\n        }\n    }\n    \n    render(){\n        return(\n            <div>\n                <h1 className='page-heading'>Bestsellers</h1>\n                <div>{this.searchForm()}</div>\n                <div className='queryErrorMessage'>{this.state.errorMessage}</div>\n                <div>{this.searchResults()}</div>\n            </div>\n        )\n    }\n}","import React from 'react';\n\nexport default class Articles extends React.Component {\n    state = {\n        queryValue: '',\n        results: [],\n        numberOfResults: '',\n        resultsLoading: true,\n        articlesOnList: []\n    };\n\n    queryValueEntryChange = (e) => {\n        this.setState({ queryValue: e.target.value });\n    }\n\n    searchQuery = (e) => {\n        e.preventDefault();\n        fetch(`https://api.nytimes.com/svc/search/v2/articlesearch.json?q=${this.state.queryValue}&api-key=${process.env.REACT_APP_NYT_API_KEY}`)\n        .then(res => res.json())\n        .then(data => this.setState({\n          results: data,\n          numberOfResults: data.response.meta.hits,\n          resultsLoading: false\n        }));\n    }\n\n    searchResults = () => {\n        return this.state.resultsLoading\n        ? <div className='searchResultsLoading'>Please complete the search above to display a list of results.</div>\n        : <div>\n            <h2 className='page-sub-heading'>Results:</h2>\n            <div className='query-info'>There are {this.state.numberOfResults} for the term \"{this.state.queryValue}\".</div>\n            <div className='search-results'>\n                {this.state.results.response.docs.map((document, index) => \n                    <div key={index} id={`${this.state.queryValue}${index}`} className='article-container'>\n                        <h3 className='article-headline'>{document.headline.main}</h3>\n                        <h4 className='article-author'>by {document.byline.original}</h4>\n                        <p className='article-abstract'>{document.abstract}</p>\n                        <a className='article-link' href={document.web_url} target=\"_blank\" rel=\"noopener noreferrer\">Read the full article</a>\n                        <br/>\n                        <button className='article-add-button' id={`addBtn${this.state.queryValue}${index}`} onClick={this.addArticleToList(index)}>Add to List</button>\n                    </div>\n                )}\n            </div>\n        </div>\n    }\n\n    addArticleToList = (index) => {\n        return (e) => {\n            const newArticlesOnList = [...this.state.articlesOnList, this.state.results.response.docs[index]]\n            this.setState({\n                articlesOnList: newArticlesOnList\n            })\n        }\n    }\n\n    render() {\n        return(\n            <div>\n                <h1 className='page-heading'>Articles</h1>\n                <h2>Add a keyword below:</h2>\n                <form onSubmit={this.searchQuery}>\n                    <label htmlFor=\"keyword\">Keyword: </label>\n                    <input\n                        type=\"text\"\n                        id=\"keyword\"\n                        name=\"keyword\"\n                        placeholder=\"election\"\n                        value={this.state.entry}\n                        onChange={this.queryValueEntryChange}\n                        required\n                    />\n                    <br/>\n                    <input type=\"submit\" value=\"Submit\" />\n                </form>\n                <div>{this.searchResults()}</div>\n            </div>\n        )\n    }\n}\n","import React from 'react';\n\nexport default class Movies extends React.Component {\n    state = {\n        queryValue: '',\n        results: [],\n        numberOfResults: '',\n        resultsLoading: true,\n        moviesOnList: []\n    };\n\n    queryValueEntryChange = (e) => {\n        this.setState({ queryValue: e.target.value });\n    }\n\n    searchQuery = (e) => {\n        e.preventDefault();\n        fetch(`https://api.nytimes.com/svc/movies/v2/reviews/search.json?query=${this.state.queryValue}&api-key=${process.env.REACT_APP_NYT_API_KEY}`)\n        .then(res => res.json())\n        .then(data => this.setState({\n          results: data,\n          numberOfResults: data.num_results,\n          resultsLoading: false\n        }));\n    }\n\n    searchResults = () => {\n        return this.state.resultsLoading\n        ? <div className='searchResultsLoading'>Please complete the search above to display a list of results.</div>\n        : <div>\n            <h2 className='page-sub-heading'>Results:</h2>\n            <div className='query-info'>There are {this.state.numberOfResults} for the term \"{this.state.queryValue}\".</div>\n            <div className='search-results'>\n                {this.state.results.results.map((movie, index) => \n                    <div key={index} id={`${this.state.queryValue}${index}`} className='movie-container'>\n                        <h3 className='movie-title'>{movie.display_title}</h3>\n                        <h4 className='movie-reviewer'>Reviewed by {movie.byline}</h4>\n                        <p className='movie-summary'>{movie.summary_short}</p>\n                        <a className='movie-review-link' href={movie.link.url} target=\"_blank\" rel=\"noopener noreferrer\">Read the full review</a>\n                        <br/>\n                        <button className='movie-add-button' id={`addBtn${this.state.queryValue}${index}`} onClick={this.addMovieToList(index)}>Add to List</button>\n                    </div>\n                )}\n            </div>\n        </div>\n    }\n\n    addMovieToList = (index) => {\n        return (e) => {\n            const newMoviesOnList = [...this.state.moviesOnList, this.state.results.results[index]]\n            this.setState({\n                moviesOnList: newMoviesOnList\n            })\n        }\n    }\n\n    render() {\n        return(\n            <div>\n                <h1 className='page-heading'>Movies</h1>\n                <h2>Add a keyword below:</h2>\n                <form onSubmit={this.searchQuery}>\n                    <label htmlFor=\"keyword\">Keyword: </label>\n                    <input\n                        type=\"text\"\n                        id=\"keyword\"\n                        name=\"keyword\"\n                        placeholder=\"lebowski\"\n                        value={this.state.entry}\n                        onChange={this.queryValueEntryChange}\n                        required\n                    />\n                    <br/>\n                    <input type=\"submit\" value=\"Submit\" />\n                </form>\n                <div>{this.searchResults()}</div>\n            </div>\n        )\n    }\n}\n","import React from 'react';\n\nexport default class ReadingList extends React.Component {\n\n    render(){\n        return(\n            <h1 className='page-heading'>List</h1>\n        )\n    }\n}\n","import React from 'react';\nimport { HashRouter as Router, Route, Link } from 'react-router-dom';\nimport Home from './home';\nimport BestSellerSearch from './bestsellersearch';\nimport Articles from './articles';\nimport Movies from './movies';\nimport ReadingList from './readinglist';\nimport empire from './empire-state.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <div className='header-content'>\n          <img id='app-logo' src={empire} alt='Empire State Building'/>\n          <div className='app-name'>NYT - What to read and watch?</div>\n          <button className='header-button'>\n            <Link className='header-link' to=\"/\">HOME</Link>\n          </button>\n          <button className='header-button'>\n            <Link className='header-link' to=\"/bestseller-search/\">Bestsellers</Link>\n          </button>\n          <button className='header-button'>\n            <Link className='header-link' to=\"/article-search/\">Articles</Link>\n          </button>\n          <button className='header-button'>\n            <Link className='header-link' to=\"/movie-search/\">Movies</Link>\n          </button>\n        </div>\n        <div className='app-content'>\n          <div className='search-area'>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/bestseller-search\" component={BestSellerSearch} />\n            <Route exact path=\"/article-search\" component={Articles} />\n            <Route exact path=\"/movie-search\" component={Movies} />\n          </div>\n          <div className='list-area'>\n            <ReadingList/>\n          </div>\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}