{"ast":null,"code":"var _jsxFileName = \"/Users/sven/course2-finalProjectJSCRIPT300A/nyt-reading-list/src/bestsellersearch.js\";\nimport React from 'react';\nimport API_KEY from './api-key';\nexport default class BestSellerSearch extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      genres: [],\n      genresLoading: true,\n      queryDate: '',\n      queryGenre: '',\n      results: [],\n      resultsLoading: true,\n      errorMessage: ''\n    };\n\n    this.searchForm = () => {\n      return this.state.genresLoading ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"searchFormLoading\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }\n      }, \"Loading genres...\") : /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }\n      }, \"Add a date and select a genre in the form below:\"), /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.searchQuery,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"date\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }\n      }, \"Date: \"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        id: \"date\",\n        name: \"date\",\n        placeholder: \"2020-02-20\",\n        value: this.state.queryDate,\n        onChange: this.queryDateEntryChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"genre\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }\n      }, \"Genre: \"), /*#__PURE__*/React.createElement(\"select\", {\n        id: \"genre\",\n        name: \"genre\",\n        onChange: this.queryGenreEntryChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }\n      }, \"Select one\"), this.state.genres.results.map(result => /*#__PURE__*/React.createElement(\"option\", {\n        key: result.list_name,\n        value: result.list_name_encoded,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }\n      }, result.list_name))), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }\n      })));\n    };\n\n    this.queryDateEntryChange = e => {\n      this.setState({\n        queryDate: e.target.value\n      });\n    };\n\n    this.queryGenreEntryChange = e => {\n      this.setState({\n        queryGenre: e.target.value\n      });\n    };\n\n    this.searchQuery = e => {\n      e.preventDefault();\n      fetch(`https://api.nytimes.com/svc/books/v3/lists/${this.state.queryDate}/${this.state.queryGenre}.json?api-key=${API_KEY}`).then(res => {\n        if (res.status === 404) {\n          throw new Error('No list found for list name and/or date provided.');\n        } else {\n          return res.json();\n        }\n      }).then(data => this.setState({\n        results: data,\n        resultsLoading: false\n      })).catch(error => {\n        const errorMessage = error.message;\n        this.setState({\n          resultsLoading: true,\n          errorMessage\n        });\n      });\n    };\n\n    this.searchResults = () => {\n      return this.state.resultsLoading ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"searchResultsLoading\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }\n      }, \"Please complete the search above to display a list of results.\") : /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        className: \"page-sub-heading\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }\n      }, \"Results:\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"query-info\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }\n      }, \"Closest possible query for \", this.state.results.results.list_name, \" is for \", this.state.results.results.published_date, \".\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"search-results\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }\n      }, this.state.results.results.books.map((book, index) => /*#__PURE__*/React.createElement(\"div\", {\n        key: book.title,\n        id: `${this.state.queryGenre}${index}`,\n        className: \"book-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"book-image\",\n        src: book.book_image,\n        alt: \"book cover\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"h3\", {\n        className: \"book-title-author\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }\n      }, book.title, \" by \", book.author), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"book-description\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }\n      }, book.description), /*#__PURE__*/React.createElement(\"a\", {\n        className: \"book-amazon-link\",\n        href: book.amazon_product_url,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }\n      }, \"Buy the book on Amazon\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"book-add-button\",\n        id: `addBtn${this.state.queryGenre}${index}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 25\n        }\n      }, \"Add to List\")))));\n    };\n  }\n\n  componentDidMount() {\n    fetch(`https://api.nytimes.com/svc/books/v3//lists/names.json?api-key=${API_KEY}`).then(res => res.json()).then(data => this.setState({\n      genres: data,\n      genresLoading: false\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"page-heading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    }, \"Bestsellers\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }\n    }, this.searchForm()), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"queryErrorMessage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }\n    }, this.state.errorMessage), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }\n    }, this.searchResults()));\n  }\n\n}","map":{"version":3,"sources":["/Users/sven/course2-finalProjectJSCRIPT300A/nyt-reading-list/src/bestsellersearch.js"],"names":["React","API_KEY","BestSellerSearch","Component","state","genres","genresLoading","queryDate","queryGenre","results","resultsLoading","errorMessage","searchForm","searchQuery","queryDateEntryChange","queryGenreEntryChange","map","result","list_name","list_name_encoded","e","setState","target","value","preventDefault","fetch","then","res","status","Error","json","data","catch","error","message","searchResults","published_date","books","book","index","title","book_image","author","description","amazon_product_url","componentDidMount","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport API_KEY from './api-key';\n\nexport default class BestSellerSearch extends React.Component {\n    state = {\n        genres: [],\n        genresLoading: true,\n        queryDate: '',\n        queryGenre: '',\n        results: [],\n        resultsLoading: true,\n        errorMessage: ''\n    };\n\n    componentDidMount() {\n        fetch(`https://api.nytimes.com/svc/books/v3//lists/names.json?api-key=${API_KEY}`)\n        .then(res => res.json())\n        .then(data => this.setState({\n          genres: data,\n          genresLoading: false\n        }));\n    }\n\n    searchForm = () => {\n        return this.state.genresLoading\n        ? <div className='searchFormLoading'>Loading genres...</div>\n        : <div>\n            <h2>Add a date and select a genre in the form below:</h2>\n            <form onSubmit={this.searchQuery}>\n                <label htmlFor=\"date\">Date: </label>\n                <input \n                    type=\"text\"\n                    id=\"date\"\n                    name=\"date\"\n                    placeholder=\"2020-02-20\"\n                    value={this.state.queryDate}\n                    onChange={this.queryDateEntryChange}\n                />\n                <br/>\n                <label htmlFor=\"genre\">Genre: </label>\n                <select id=\"genre\" name=\"genre\" onChange={this.queryGenreEntryChange}>\n                    <option value=''>Select one</option>\n                    {this.state.genres.results.map(result =>\n                        <option key={result.list_name} value={result.list_name_encoded}>{result.list_name}</option>\n                    )}\n                </select>\n                <br/>\n                <input type=\"submit\" value=\"Submit\" />\n            </form>\n        </div>\n    }\n\n    queryDateEntryChange = (e) => {\n        this.setState({ queryDate: e.target.value });\n    }\n\n    queryGenreEntryChange = (e) => {\n        this.setState({ queryGenre: e.target.value });\n    }\n\n    searchQuery = (e) => {\n        e.preventDefault();\n        fetch(`https://api.nytimes.com/svc/books/v3/lists/${this.state.queryDate}/${this.state.queryGenre}.json?api-key=${API_KEY}`)\n        .then(res => {\n            if (res.status === 404) {\n                throw new Error('No list found for list name and/or date provided.');\n            } else {\n                return res.json();\n            }\n        })\n        .then(data => this.setState({\n          results: data,\n          resultsLoading: false\n        }))\n        .catch(error => {\n            const errorMessage = error.message;\n            this.setState({ resultsLoading: true, errorMessage });\n        });\n    }\n\n    searchResults = () => {\n        return this.state.resultsLoading\n        ? <div className='searchResultsLoading'>Please complete the search above to display a list of results.</div>\n        : <div>\n            <h2 className='page-sub-heading'>Results:</h2>\n            <div className='query-info'>Closest possible query for {this.state.results.results.list_name} is for {this.state.results.results.published_date}.</div>\n            <div className='search-results'>\n                {this.state.results.results.books.map((book, index) => \n                    <div key={book.title} id={`${this.state.queryGenre}${index}`} className='book-container'>\n                        <img className='book-image' src={book.book_image} alt='book cover'/>\n                        <h3 className='book-title-author'>{book.title} by {book.author}</h3>\n                        <p className='book-description'>{book.description}</p>\n                        <a className='book-amazon-link' href={book.amazon_product_url}>Buy the book on Amazon</a>\n                        <br/>\n                        <button className='book-add-button' id={`addBtn${this.state.queryGenre}${index}`}>Add to List</button>\n                    </div>\n                )}\n            </div>\n        </div>\n\n    }\n    \n    render(){\n        return(\n            <div>\n                <h1 className='page-heading'>Bestsellers</h1>\n                <div>{this.searchForm()}</div>\n                <div className='queryErrorMessage'>{this.state.errorMessage}</div>\n                <div>{this.searchResults()}</div>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}