{"ast":null,"code":"var _jsxFileName = \"/Users/sven/course2-finalProjectJSCRIPT300A/nyt-reading-list/src/movies.js\";\nimport React from 'react';\nimport API_KEY from './api-key';\nexport default class Movies extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      queryValue: '',\n      results: [],\n      numberOfResults: '',\n      resultsLoading: true\n    };\n\n    this.queryValueEntryChange = e => {\n      this.setState({\n        queryValue: e.target.value\n      });\n    };\n\n    this.searchQuery = e => {\n      e.preventDefault();\n      fetch(`https://api.nytimes.com/svc/movies/v2/reviews/search.json?query=${this.state.queryValue}&api-key=${API_KEY}`).then(res => res.json()).then(data => this.setState({\n        results: data,\n        numberOfResults: data.num_results\n      }));\n    };\n\n    this.searchResults = () => {\n      if (this.state.numberOfResults === 0) {\n        /*#__PURE__*/\n        React.createElement(\"div\", {\n          className: \"queryErrorMessage\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }\n        }, \"No list found for data provided.\");\n      }\n    };\n  }\n\n  // searchResults = () => {\n  //     return this.state.resultsLoading\n  //     ? <div className='searchResultsLoading'>Please complete the search above to display a list of results.</div>\n  //     : <div>\n  //         <h2 className='page-sub-heading'>Results:</h2>\n  //         <div className='search-results'>\n  //             {this.state.results.results.map((movie, index) => \n  //                 <div key={index} id={`${this.state.queryValue}${index}`} className='movie-container'>\n  //                     <h3 className='movie-title'>{movie.display_title}</h3>\n  //                     <h4 className='movie-reviewer'>Reviewed by {movie.byline}</h4>\n  //                     <p className='movie-summary'>{movie.summary_short}</p>\n  //                     <a className='movie-review-link' href={movie.link.url}>Read the full review</a>\n  //                     <br/>\n  //                     <button className='movie-add-button' id={`addBtn${this.state.queryValue}${index}`}>Add to List</button>\n  //                 </div>\n  //             )}\n  //         </div>\n  //     </div>\n  // }\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"page-heading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }, \"Movies\"), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    }, \"Add a keyword below:\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.searchQuery,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"keyword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }\n    }, \"Keyword: \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"keyword\",\n      name: \"keyword\",\n      placeholder: \"lebowski\",\n      value: this.state.entry,\n      onChange: this.queryValueEntryChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"queryErrorMessage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }, this.state.errorMessage), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }, this.searchResults()));\n  }\n\n}","map":{"version":3,"sources":["/Users/sven/course2-finalProjectJSCRIPT300A/nyt-reading-list/src/movies.js"],"names":["React","API_KEY","Movies","Component","state","queryValue","results","numberOfResults","resultsLoading","queryValueEntryChange","e","setState","target","value","searchQuery","preventDefault","fetch","then","res","json","data","num_results","searchResults","render","entry","errorMessage"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,eAAe,MAAMC,MAAN,SAAqBF,KAAK,CAACG,SAA3B,CAAqC;AAAA;AAAA;AAAA,SAChDC,KADgD,GACxC;AACJC,MAAAA,UAAU,EAAE,EADR;AAEJC,MAAAA,OAAO,EAAE,EAFL;AAGJC,MAAAA,eAAe,EAAE,EAHb;AAIJC,MAAAA,cAAc,EAAE;AAJZ,KADwC;;AAAA,SAQhDC,qBARgD,GAQvBC,CAAD,IAAO;AAC3B,WAAKC,QAAL,CAAc;AAAEN,QAAAA,UAAU,EAAEK,CAAC,CAACE,MAAF,CAASC;AAAvB,OAAd;AACH,KAV+C;;AAAA,SAYhDC,WAZgD,GAYjCJ,CAAD,IAAO;AACjBA,MAAAA,CAAC,CAACK,cAAF;AACAC,MAAAA,KAAK,CAAE,mEAAkE,KAAKZ,KAAL,CAAWC,UAAW,YAAWJ,OAAQ,EAA7G,CAAL,CACCgB,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEMG,IAAI,IAAI,KAAKT,QAAL,CAAc;AAC1BL,QAAAA,OAAO,EAAEc,IADiB;AAE1Bb,QAAAA,eAAe,EAAEa,IAAI,CAACC;AAFI,OAAd,CAFd;AAMH,KApB+C;;AAAA,SAsBhDC,aAtBgD,GAsBhC,MAAM;AAClB,UAAI,KAAKlB,KAAL,CAAWG,eAAX,KAA+B,CAAnC,EAAsC;AAClC;AAAA;AAAK,UAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACH;AACJ,KA1B+C;AAAA;;AA6BhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAgB,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,MAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAFJ,eAGI;AAAM,MAAA,QAAQ,EAAE,KAAKT,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,eAEI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,EAAE,EAAC,SAFP;AAGI,MAAA,IAAI,EAAC,SAHT;AAII,MAAA,WAAW,EAAC,UAJhB;AAKI,MAAA,KAAK,EAAE,KAAKV,KAAL,CAAWoB,KALtB;AAMI,MAAA,QAAQ,EAAE,KAAKf,qBANnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVJ,eAWI;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXJ,CAHJ,eAgBI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoC,KAAKL,KAAL,CAAWqB,YAA/C,CAhBJ,eAiBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKH,aAAL,EAAN,CAjBJ,CADJ;AAqBH;;AAvE+C","sourcesContent":["import React from 'react';\nimport API_KEY from './api-key';\n\nexport default class Movies extends React.Component {\n    state = {\n        queryValue: '',\n        results: [],\n        numberOfResults: '',\n        resultsLoading: true\n    };\n\n    queryValueEntryChange = (e) => {\n        this.setState({ queryValue: e.target.value });\n    }\n\n    searchQuery = (e) => {\n        e.preventDefault();\n        fetch(`https://api.nytimes.com/svc/movies/v2/reviews/search.json?query=${this.state.queryValue}&api-key=${API_KEY}`)\n        .then(res => res.json())\n        .then(data => this.setState({\n          results: data,\n          numberOfResults: data.num_results,\n        }));\n    }\n\n    searchResults = () => {\n        if (this.state.numberOfResults === 0) {\n            <div className='queryErrorMessage'>No list found for data provided.</div> \n        }\n    }\n\n\n    // searchResults = () => {\n    //     return this.state.resultsLoading\n    //     ? <div className='searchResultsLoading'>Please complete the search above to display a list of results.</div>\n    //     : <div>\n    //         <h2 className='page-sub-heading'>Results:</h2>\n    //         <div className='search-results'>\n    //             {this.state.results.results.map((movie, index) => \n    //                 <div key={index} id={`${this.state.queryValue}${index}`} className='movie-container'>\n    //                     <h3 className='movie-title'>{movie.display_title}</h3>\n    //                     <h4 className='movie-reviewer'>Reviewed by {movie.byline}</h4>\n    //                     <p className='movie-summary'>{movie.summary_short}</p>\n    //                     <a className='movie-review-link' href={movie.link.url}>Read the full review</a>\n    //                     <br/>\n    //                     <button className='movie-add-button' id={`addBtn${this.state.queryValue}${index}`}>Add to List</button>\n    //                 </div>\n    //             )}\n    //         </div>\n    //     </div>\n    // }\n\n    render() {\n        return(\n            <div>\n                <h1 className='page-heading'>Movies</h1>\n                <h2>Add a keyword below:</h2>\n                <form onSubmit={this.searchQuery}>\n                    <label htmlFor=\"keyword\">Keyword: </label>\n                    <input\n                        type=\"text\"\n                        id=\"keyword\"\n                        name=\"keyword\"\n                        placeholder=\"lebowski\"\n                        value={this.state.entry}\n                        onChange={this.queryValueEntryChange}\n                    />\n                    <br/>\n                    <input type=\"submit\" value=\"Submit\" />\n                </form>\n                <div className='queryErrorMessage'>{this.state.errorMessage}</div>\n                <div>{this.searchResults()}</div>\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}